{"ast":null,"code":"import \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nexport default {\n  name: 'DeviceCard',\n  props: {\n    device: {\n      type: Object,\n      required: true\n    }\n  },\n  methods: {\n    formatLastSeen: function formatLastSeen(timestamp) {\n      if (!timestamp) return 'Never';\n      var date = new Date(timestamp);\n      return date.toLocaleString();\n    },\n    formatLabel: function formatLabel(key) {\n      return key.split('_').map(function (word) {\n        return word.charAt(0).toUpperCase() + word.slice(1);\n      }).join(' ');\n    },\n    formatValue: function formatValue(value) {\n      if (typeof value === 'number') {\n        return value.toFixed(2);\n      }\n      return value;\n    }\n  }\n};","map":{"version":3,"names":["name","props","device","type","Object","required","methods","formatLastSeen","timestamp","date","Date","toLocaleString","formatLabel","key","split","map","word","charAt","toUpperCase","slice","join","formatValue","value","toFixed"],"sources":["/Users/ailurus/iot-dashboard/frontend/src/components/DeviceCard.vue"],"sourcesContent":["<template>\n  <div class=\"device-card\" @click=\"$emit('click')\">\n    <div class=\"device-header\">\n      <h3>{{ device.name }}</h3>\n      <span :class=\"['status-badge', device.online ? 'success' : 'danger']\">\n        {{ device.online ? 'Online' : 'Offline' }}\n      </span>\n    </div>\n    \n    <div class=\"device-info\">\n      <p class=\"device-id\">ID: {{ device.id }}</p>\n      <p class=\"device-type\">Type: {{ device.type }}</p>\n      <p class=\"device-last-seen\" v-if=\"!device.online\">\n        Last seen: {{ formatLastSeen(device.last_seen) }}\n      </p>\n    </div>\n    \n    <div class=\"device-data\" v-if=\"device.data\">\n      <div v-for=\"(value, key) in device.data\" :key=\"key\" class=\"data-item\">\n        <span class=\"data-label\">{{ formatLabel(key) }}:</span>\n        <span class=\"data-value\">{{ formatValue(value) }}</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'DeviceCard',\n  props: {\n    device: {\n      type: Object,\n      required: true\n    }\n  },\n  methods: {\n    formatLastSeen(timestamp) {\n      if (!timestamp) return 'Never'\n      const date = new Date(timestamp)\n      return date.toLocaleString()\n    },\n    formatLabel(key) {\n      return key.split('_').map(word => \n        word.charAt(0).toUpperCase() + word.slice(1)\n      ).join(' ')\n    },\n    formatValue(value) {\n      if (typeof value === 'number') {\n        return value.toFixed(2)\n      }\n      return value\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.device-card {\n  background-color: white;\n  border-radius: 0.5rem;\n  padding: 1.5rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n  transition: transform 0.2s, box-shadow 0.2s;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  }\n  \n  .device-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 1rem;\n    \n    h3 {\n      font-size: 1.125rem;\n      font-weight: 600;\n      color: #111827;\n    }\n  }\n  \n  .device-info {\n    margin-bottom: 1rem;\n    \n    p {\n      margin: 0.25rem 0;\n      color: #6b7280;\n      font-size: 0.875rem;\n    }\n  }\n  \n  .device-data {\n    border-top: 1px solid #e5e7eb;\n    padding-top: 1rem;\n    \n    .data-item {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 0.5rem;\n      \n      .data-label {\n        color: #6b7280;\n        font-size: 0.875rem;\n      }\n      \n      .data-value {\n        font-weight: 500;\n        color: #111827;\n      }\n    }\n  }\n}\n</style> "],"mappings":";;;;;;;;AA2BA,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,cAAc,WAAdA,cAAcA,CAACC,SAAS,EAAE;MACxB,IAAI,CAACA,SAAS,EAAE,OAAO,OAAM;MAC7B,IAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,SAAS;MAC/B,OAAOC,IAAI,CAACE,cAAc,CAAC;IAC7B,CAAC;IACDC,WAAW,WAAXA,WAAWA,CAACC,GAAG,EAAE;MACf,OAAOA,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,UAAAC,IAAG;QAAA,OAC3BA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,IAAIF,IAAI,CAACG,KAAK,CAAC,CAAC;MAAA,CAC7C,CAAC,CAACC,IAAI,CAAC,GAAG;IACZ,CAAC;IACDC,WAAW,WAAXA,WAAWA,CAACC,KAAK,EAAE;MACjB,IAAI,OAAOA,KAAI,KAAM,QAAQ,EAAE;QAC7B,OAAOA,KAAK,CAACC,OAAO,CAAC,CAAC;MACxB;MACA,OAAOD,KAAI;IACb;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}