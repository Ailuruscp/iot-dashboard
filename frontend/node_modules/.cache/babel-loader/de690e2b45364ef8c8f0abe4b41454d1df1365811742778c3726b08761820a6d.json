{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ailurus/iot-dashboard/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ailurus/iot-dashboard/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/ailurus/iot-dashboard/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { mapState, mapGetters, mapActions } from 'vuex';\nimport DeviceCard from '@/components/DeviceCard.vue';\nexport default {\n  name: 'Dashboard',\n  components: {\n    DeviceCard: DeviceCard\n  },\n  data: function data() {\n    return {\n      showAddDeviceModal: false,\n      newDevice: {\n        id: '',\n        name: '',\n        type: ''\n      }\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState(['devices', 'loading', 'error', 'wsConnected'])), mapGetters(['onlineDevices', 'offlineDevices'])),\n  created: function created() {\n    this.fetchDevices();\n    this.connectWebSocket();\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions(['fetchDevices', 'registerDevice', 'connectWebSocket'])), {}, {\n    viewDeviceDetails: function viewDeviceDetails(id) {\n      this.$router.push(\"/device/\".concat(id));\n    },\n    registerNewDevice: function registerNewDevice() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.registerDevice(_this.newDevice);\n            case 2:\n              _this.showAddDeviceModal = false;\n              _this.newDevice = {\n                id: '',\n                name: '',\n                type: ''\n              };\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  })\n};","map":{"version":3,"names":["mapState","mapGetters","mapActions","DeviceCard","name","components","data","showAddDeviceModal","newDevice","id","type","computed","_objectSpread","created","fetchDevices","connectWebSocket","methods","viewDeviceDetails","$router","push","concat","registerNewDevice","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","registerDevice","stop"],"sources":["/Users/ailurus/iot-dashboard/frontend/src/views/Dashboard.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <div class=\"dashboard-header\">\n      <h2>Device Dashboard</h2>\n      <div class=\"connection-status\">\n        <span :class=\"['status-indicator', { 'connected': wsConnected }]\"></span>\n        {{ wsConnected ? 'Connected' : 'Disconnected' }}\n      </div>\n    </div>\n    \n    <div v-if=\"error\" class=\"error-message\">\n      {{ error }}\n    </div>\n    \n    <div v-if=\"loading\" class=\"loading\">\n      Loading devices...\n    </div>\n    \n    <div v-else>\n      <div class=\"stats-cards\">\n        <div class=\"card stat-card\">\n          <h3>Total Devices</h3>\n          <p class=\"stat-value\">{{ devices.length }}</p>\n        </div>\n        <div class=\"card stat-card\">\n          <h3>Online Devices</h3>\n          <p class=\"stat-value\">{{ onlineDevices.length }}</p>\n        </div>\n        <div class=\"card stat-card\">\n          <h3>Offline Devices</h3>\n          <p class=\"stat-value\">{{ offlineDevices.length }}</p>\n        </div>\n      </div>\n      \n      <div class=\"device-actions\">\n        <button class=\"btn btn-primary\" @click=\"showAddDeviceModal = true\">\n          Add Device\n        </button>\n      </div>\n      \n      <div v-if=\"devices.length === 0\" class=\"no-devices\">\n        <p>No devices registered. Add a device to get started.</p>\n      </div>\n      \n      <div v-else class=\"grid grid-cols-3\">\n        <device-card\n          v-for=\"device in devices\"\n          :key=\"device.id\"\n          :device=\"device\"\n          @click=\"viewDeviceDetails(device.id)\"\n        />\n      </div>\n    </div>\n    \n    <!-- Add Device Modal -->\n    <div v-if=\"showAddDeviceModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <h3>Add New Device</h3>\n        <form @submit.prevent=\"registerNewDevice\">\n          <div class=\"form-group\">\n            <label for=\"deviceId\">Device ID</label>\n            <input\n              id=\"deviceId\"\n              v-model=\"newDevice.id\"\n              type=\"text\"\n              required\n              placeholder=\"e.g., device-001\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"deviceName\">Device Name</label>\n            <input\n              id=\"deviceName\"\n              v-model=\"newDevice.name\"\n              type=\"text\"\n              required\n              placeholder=\"e.g., Living Room Sensor\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"deviceType\">Device Type</label>\n            <select id=\"deviceType\" v-model=\"newDevice.type\" required>\n              <option value=\"\">Select a type</option>\n              <option value=\"sensor\">Sensor</option>\n              <option value=\"controller\">Controller</option>\n              <option value=\"camera\">Camera</option>\n              <option value=\"other\">Other</option>\n            </select>\n          </div>\n          <div class=\"form-actions\">\n            <button type=\"button\" class=\"btn\" @click=\"showAddDeviceModal = false\">\n              Cancel\n            </button>\n            <button type=\"submit\" class=\"btn btn-primary\">\n              Add Device\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapGetters, mapActions } from 'vuex'\nimport DeviceCard from '@/components/DeviceCard.vue'\n\nexport default {\n  name: 'Dashboard',\n  components: {\n    DeviceCard\n  },\n  data() {\n    return {\n      showAddDeviceModal: false,\n      newDevice: {\n        id: '',\n        name: '',\n        type: ''\n      }\n    }\n  },\n  computed: {\n    ...mapState(['devices', 'loading', 'error', 'wsConnected']),\n    ...mapGetters(['onlineDevices', 'offlineDevices'])\n  },\n  created() {\n    this.fetchDevices()\n    this.connectWebSocket()\n  },\n  methods: {\n    ...mapActions(['fetchDevices', 'registerDevice', 'connectWebSocket']),\n    viewDeviceDetails(id) {\n      this.$router.push(`/device/${id}`)\n    },\n    async registerNewDevice() {\n      await this.registerDevice(this.newDevice)\n      this.showAddDeviceModal = false\n      this.newDevice = {\n        id: '',\n        name: '',\n        type: ''\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dashboard {\n  .dashboard-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 2rem;\n    \n    h2 {\n      font-size: 1.5rem;\n      font-weight: 600;\n    }\n  }\n  \n  .connection-status {\n    display: flex;\n    align-items: center;\n    font-size: 0.875rem;\n    \n    .status-indicator {\n      width: 10px;\n      height: 10px;\n      border-radius: 50%;\n      background-color: #ef4444;\n      margin-right: 0.5rem;\n      \n      &.connected {\n        background-color: #10b981;\n      }\n    }\n  }\n  \n  .error-message {\n    background-color: rgba(239, 68, 68, 0.1);\n    color: #ef4444;\n    padding: 1rem;\n    border-radius: 0.375rem;\n    margin-bottom: 1.5rem;\n  }\n  \n  .loading {\n    text-align: center;\n    padding: 2rem;\n    color: #6b7280;\n  }\n  \n  .stats-cards {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 1.5rem;\n    margin-bottom: 2rem;\n    \n    @media (max-width: 768px) {\n      grid-template-columns: 1fr;\n    }\n    \n    .stat-card {\n      text-align: center;\n      \n      h3 {\n        font-size: 1rem;\n        color: #6b7280;\n        margin-bottom: 0.5rem;\n      }\n      \n      .stat-value {\n        font-size: 2rem;\n        font-weight: 700;\n        color: #4f46e5;\n      }\n    }\n  }\n  \n  .device-actions {\n    margin-bottom: 1.5rem;\n  }\n  \n  .no-devices {\n    text-align: center;\n    padding: 3rem;\n    background-color: white;\n    border-radius: 0.5rem;\n    color: #6b7280;\n  }\n  \n  .modal {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 1000;\n    \n    .modal-content {\n      background-color: white;\n      border-radius: 0.5rem;\n      padding: 2rem;\n      width: 100%;\n      max-width: 500px;\n      \n      h3 {\n        margin-bottom: 1.5rem;\n        font-size: 1.25rem;\n        font-weight: 600;\n      }\n      \n      .form-group {\n        margin-bottom: 1rem;\n        \n        label {\n          display: block;\n          margin-bottom: 0.5rem;\n          font-weight: 500;\n        }\n        \n        input, select {\n          width: 100%;\n          padding: 0.5rem;\n          border: 1px solid #e5e7eb;\n          border-radius: 0.375rem;\n          \n          &:focus {\n            outline: none;\n            border-color: #4f46e5;\n          }\n        }\n      }\n      \n      .form-actions {\n        display: flex;\n        justify-content: flex-end;\n        gap: 1rem;\n        margin-top: 1.5rem;\n      }\n    }\n  }\n}\n</style> "],"mappings":";;;;AAwGA,SAASA,QAAQ,EAAEC,UAAU,EAAEC,UAAS,QAAS,MAAK;AACtD,OAAOC,UAAS,MAAO,6BAA4B;AAEnD,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVF,UAAS,EAATA;EACF,CAAC;EACDG,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,kBAAkB,EAAE,KAAK;MACzBC,SAAS,EAAE;QACTC,EAAE,EAAE,EAAE;QACNL,IAAI,EAAE,EAAE;QACRM,IAAI,EAAE;MACR;IACF;EACF,CAAC;EACDC,QAAQ,EAAAC,aAAA,CAAAA,aAAA,KACHZ,QAAQ,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC,GACxDC,UAAU,CAAC,CAAC,eAAe,EAAE,gBAAgB,CAAC,EAClD;EACDY,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,YAAY,CAAC;IAClB,IAAI,CAACC,gBAAgB,CAAC;EACxB,CAAC;EACDC,OAAO,EAAAJ,aAAA,CAAAA,aAAA,KACFV,UAAU,CAAC,CAAC,cAAc,EAAE,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;IACrEe,iBAAiB,WAAjBA,iBAAiBA,CAACR,EAAE,EAAE;MACpB,IAAI,CAACS,OAAO,CAACC,IAAI,YAAAC,MAAA,CAAYX,EAAE,CAAE;IACnC,CAAC;IACKY,iBAAiB,WAAjBA,iBAAiBA,CAAA,EAAG;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OAClBT,KAAI,CAACU,cAAc,CAACV,KAAI,CAACd,SAAS;YAAA;cACxCc,KAAI,CAACf,kBAAiB,GAAI,KAAI;cAC9Be,KAAI,CAACd,SAAQ,GAAI;gBACfC,EAAE,EAAE,EAAE;gBACNL,IAAI,EAAE,EAAE;gBACRM,IAAI,EAAE;cACR;YAAA;YAAA;cAAA,OAAAmB,QAAA,CAAAI,IAAA;UAAA;QAAA,GAAAP,OAAA;MAAA;IACF;EAAA;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}