{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"device-detail\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"device-info\"\n};\nvar _hoisted_3 = {\n  key: 1,\n  \"class\": \"loading\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"Device Details\", -1 /* HOISTED */)), $data.device ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"h2\", null, _toDisplayString($data.device.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"ID: \" + _toDisplayString($data.device.id), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Type: \" + _toDisplayString($data.device.type), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Status: \" + _toDisplayString($data.device.online ? 'Online' : 'Offline'), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Last Seen: \" + _toDisplayString($options.formatDate($data.device.last_seen)), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \" Loading device information... \"))]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","$data","device","_hoisted_2","_toDisplayString","name","id","type","online","$options","formatDate","last_seen","_hoisted_3"],"sources":["/Users/ailurus/iot-dashboard/frontend/src/views/DeviceDetail.vue"],"sourcesContent":["<template>\n  <div class=\"device-detail\">\n    <h1>Device Details</h1>\n    <div v-if=\"device\" class=\"device-info\">\n      <h2>{{ device.name }}</h2>\n      <p>ID: {{ device.id }}</p>\n      <p>Type: {{ device.type }}</p>\n      <p>Status: {{ device.online ? 'Online' : 'Offline' }}</p>\n      <p>Last Seen: {{ formatDate(device.last_seen) }}</p>\n    </div>\n    <div v-else class=\"loading\">\n      Loading device information...\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport api from '@/api/axios'\n\nexport default {\n  name: 'DeviceDetail',\n  data() {\n    return {\n      device: null\n    }\n  },\n  methods: {\n    ...mapActions(['fetchDeviceById']),\n    formatDate(date) {\n      return new Date(date).toLocaleString()\n    },\n    async fetchDeviceDetails() {\n      try {\n        const response = await api.get(`/api/devices/${this.$route.params.id}`)\n        this.device = response.data\n      } catch (error) {\n        console.error('Error fetching device details:', error)\n      }\n    }\n  },\n  created() {\n    this.fetchDeviceDetails()\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.device-detail {\n  padding: 20px;\n  \n  .device-info {\n    margin-top: 20px;\n    padding: 20px;\n    border: 1px solid #ddd;\n    border-radius: 8px;\n    \n    h2 {\n      margin-bottom: 15px;\n      color: #2c3e50;\n    }\n    \n    p {\n      margin: 10px 0;\n      color: #666;\n    }\n  }\n  \n  .loading {\n    text-align: center;\n    color: #666;\n    margin-top: 20px;\n  }\n}\n</style> "],"mappings":";;;EACO,SAAM;AAAe;;EAD5BA,GAAA;EAGuB,SAAM;;;EAH7BA,GAAA;EAUgB,SAAM;;;uBATpBC,mBAAA,CAYM,OAZNC,UAYM,G,0BAXJC,mBAAA,CAAuB,YAAnB,gBAAc,sBACPC,KAAA,CAAAC,MAAM,I,cAAjBJ,mBAAA,CAMM,OANNK,UAMM,GALJH,mBAAA,CAA0B,YAAAI,gBAAA,CAAnBH,KAAA,CAAAC,MAAM,CAACG,IAAI,kBAClBL,mBAAA,CAA0B,WAAvB,MAAI,GAAAI,gBAAA,CAAGH,KAAA,CAAAC,MAAM,CAACI,EAAE,kBACnBN,mBAAA,CAA8B,WAA3B,QAAM,GAAAI,gBAAA,CAAGH,KAAA,CAAAC,MAAM,CAACK,IAAI,kBACvBP,mBAAA,CAAyD,WAAtD,UAAQ,GAAAI,gBAAA,CAAGH,KAAA,CAAAC,MAAM,CAACM,MAAM,yCAC3BR,mBAAA,CAAoD,WAAjD,aAAW,GAAAI,gBAAA,CAAGK,QAAA,CAAAC,UAAU,CAACT,KAAA,CAAAC,MAAM,CAACS,SAAS,kB,oBAE9Cb,mBAAA,CAEM,OAFNc,UAEM,EAFsB,iCAE5B,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}