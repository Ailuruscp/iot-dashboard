{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ailurus/iot-dashboard/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ailurus/iot-dashboard/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/ailurus/iot-dashboard/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport { mapActions } from 'vuex';\nimport api from '@/api/axios';\nexport default {\n  name: 'DeviceDetail',\n  data: function data() {\n    return {\n      device: null\n    };\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions(['fetchDeviceById'])), {}, {\n    formatDate: function formatDate(date) {\n      return new Date(date).toLocaleString();\n    },\n    fetchDeviceDetails: function fetchDeviceDetails() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return api.get(\"/api/devices/\".concat(_this.$route.params.id));\n            case 3:\n              response = _context.sent;\n              _this.device = response.data;\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error fetching device details:', _context.t0);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    }\n  }),\n  created: function created() {\n    this.fetchDeviceDetails();\n  }\n};","map":{"version":3,"names":["mapActions","api","name","data","device","methods","_objectSpread","formatDate","date","Date","toLocaleString","fetchDeviceDetails","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","concat","$route","params","id","sent","t0","console","error","stop","created"],"sources":["/Users/ailurus/iot-dashboard/frontend/src/views/DeviceDetail.vue"],"sourcesContent":["<template>\n  <div class=\"device-detail\">\n    <h1>Device Details</h1>\n    <div v-if=\"device\" class=\"device-info\">\n      <h2>{{ device.name }}</h2>\n      <p>ID: {{ device.id }}</p>\n      <p>Type: {{ device.type }}</p>\n      <p>Status: {{ device.online ? 'Online' : 'Offline' }}</p>\n      <p>Last Seen: {{ formatDate(device.last_seen) }}</p>\n    </div>\n    <div v-else class=\"loading\">\n      Loading device information...\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport api from '@/api/axios'\n\nexport default {\n  name: 'DeviceDetail',\n  data() {\n    return {\n      device: null\n    }\n  },\n  methods: {\n    ...mapActions(['fetchDeviceById']),\n    formatDate(date) {\n      return new Date(date).toLocaleString()\n    },\n    async fetchDeviceDetails() {\n      try {\n        const response = await api.get(`/api/devices/${this.$route.params.id}`)\n        this.device = response.data\n      } catch (error) {\n        console.error('Error fetching device details:', error)\n      }\n    }\n  },\n  created() {\n    this.fetchDeviceDetails()\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.device-detail {\n  padding: 20px;\n  \n  .device-info {\n    margin-top: 20px;\n    padding: 20px;\n    border: 1px solid #ddd;\n    border-radius: 8px;\n    \n    h2 {\n      margin-bottom: 15px;\n      color: #2c3e50;\n    }\n    \n    p {\n      margin: 10px 0;\n      color: #666;\n    }\n  }\n  \n  .loading {\n    text-align: center;\n    color: #666;\n    margin-top: 20px;\n  }\n}\n</style> "],"mappings":";;;;AAiBA,SAASA,UAAS,QAAS,MAAK;AAChC,OAAOC,GAAE,MAAO,aAAY;AAE5B,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE;IACV;EACF,CAAC;EACDC,OAAO,EAAAC,aAAA,CAAAA,aAAA,KACFN,UAAU,CAAC,CAAC,iBAAiB,CAAC,CAAC;IAClCO,UAAU,WAAVA,UAAUA,CAACC,IAAI,EAAE;MACf,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACE,cAAc,CAAC;IACvC,CAAC;IACKC,kBAAkB,WAAlBA,kBAAkBA,CAAA,EAAG;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEArB,GAAG,CAACsB,GAAG,iBAAAC,MAAA,CAAiBZ,KAAI,CAACa,MAAM,CAACC,MAAM,CAACC,EAAE,CAAE;YAAA;cAAhEV,QAAO,GAAAG,QAAA,CAAAQ,IAAA;cACbhB,KAAI,CAACR,MAAK,GAAIa,QAAQ,CAACd,IAAG;cAAAiB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAS,EAAA,GAAAT,QAAA;cAE1BU,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAAX,QAAA,CAAAS,EAAO;YAAA;YAAA;cAAA,OAAAT,QAAA,CAAAY,IAAA;UAAA;QAAA,GAAAhB,OAAA;MAAA;IAEzD;EAAA,EACD;EACDiB,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACR,IAAI,CAACtB,kBAAkB,CAAC;EAC1B;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}